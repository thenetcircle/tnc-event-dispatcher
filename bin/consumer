#!/usr/bin/env php
<?php
foreach (
    array( __DIR__.'/../../autoload.php', __DIR__.'/../vendor/autoload.php', __DIR__.'/vendor/autoload.php',) as $file
) {
    if (file_exists($file)) {
        define('COMPOSER_AUTOLOAD_FILE', $file);
        break;
    }
}
unset($file);

if (!defined('COMPOSER_AUTOLOAD_FILE')) {
    fwrite(
        STDERR,
        'You need to set up the project dependencies using the following commands:'.PHP_EOL.
        'wget http://getcomposer.org/composer.phar'.PHP_EOL.
        'php composer.phar install'.PHP_EOL
    );
    die(1);
}
require COMPOSER_AUTOLOAD_FILE;

use \Tnc\Service\EventDispatcher\Consumer\Manager;
use \Tnc\Service\EventDispatcher\Consumer\Job\Executor;

$externalDispatcher = new \Tnc\Service\EventDispatcher\ExternalDispatcher\NullExternalDispatcher();

$backend          = new \Tnc\Service\EventDispatcher\Backend\KafkaBackend(
    #'10.20.2.103:19092,10.20.2.103:29092,10.20.2.103:39092',
    #'10.60.0.129:9092,10.60.0.129:9093,10.60.0.129:9094',
    'maggie-kafka-1.thenetcircle.lab:9092,maggie-kafka-2.thenetcircle.lab:9092,maggie-kafka-3.thenetcircle.lab:9092',
    [],
    false
);
$serializer       = new \Tnc\Service\EventDispatcher\Serializer\JsonSerializer();
$channelDetective = new \Tnc\Service\EventDispatcher\ChannelDetective\SimpleChannelDetective();
$pipeline         = new \Tnc\Service\EventDispatcher\Pipeline(
    $externalDispatcher, $backend, $serializer, $channelDetective
);

$logger = new \Tnc\Service\EventDispatcher\Consumer\SimpleLogger(\Psr\Log\LogLevel::DEBUG);

$manager = (new Manager('EventDispatcher Master', $logger)); //->demonize();
for ($i = 1; $i <= 3; $i++) {
    $manager->spawn(new Executor($externalDispatcher, $pipeline), 'EventDispatcher Executor '.$i, $i);
}

$manager->wait();